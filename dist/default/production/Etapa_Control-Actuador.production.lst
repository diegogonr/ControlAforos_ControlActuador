

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Dec 14 09:00:20 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	smallconst
    58  000800                     __psmallconst:
    59                           	callstack 0
    60  000800  00                 	db	0
    61  000801                     _HORARIO:
    62                           	callstack 0
    63  000801  88                 	db	136
    64  000802  C0                 	db	192
    65  000803  90                 	db	144
    66  000804  A0                 	db	160
    67  000805                     __end_of_HORARIO:
    68                           	callstack 0
    69  0000                     _LATB	set	3978
    70  0000                     _LATEbits	set	3981
    71  0000                     _LATA	set	3977
    72  0000                     _PORTCbits	set	3970
    73  0000                     _INTCONbits	set	4082
    74  0000                     _INTCON2bits	set	4081
    75  0000                     _INTCON3bits	set	4080
    76  0000                     _TRISA	set	3986
    77  0000                     _TRISE	set	3990
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISCbits	set	3988
    80  0000                     _ADCON1bits	set	4033
    81  000805  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  0009C0                     __pcinit:
    87                           	callstack 0
    88  0009C0                     start_initialization:
    89                           	callstack 0
    90  0009C0                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Clear objects allocated to COMRAM (4 bytes)
    94  0009C0  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    95  0009C2  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    96  0009C4  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    97  0009C6  6A01               	clrf	__pbssCOMRAM& (0+255),c
    98  0009C8                     end_of_initialization:
    99                           	callstack 0
   100  0009C8                     __end_of__initialization:
   101                           	callstack 0
   102  0009C8  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   103  0009CA  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   104  0009CC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   105  0009CE  6EF8               	movwf	tblptru,c
   106  0009D0  0E08               	movlw	high __Lsmallconst
   107  0009D2  6EF7               	movwf	tblptrh,c
   108  0009D4  0100               	movlb	0
   109  0009D6  EF03  F004         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	bssCOMRAM
   112  000001                     __pbssCOMRAM:
   113                           	callstack 0
   114  000001                     _i:
   115                           	callstack 0
   116  000001                     	ds	2
   117  000003                     _EMERGENCIA:
   118                           	callstack 0
   119  000003                     	ds	1
   120  000004                     _motor:
   121                           	callstack 0
   122  000004                     	ds	1
   123                           
   124                           	psect	cstackCOMRAM
   125  000005                     __pcstackCOMRAM:
   126                           	callstack 0
   127  000005                     ??_INT_isr:
   128                           
   129                           ; 1 bytes @ 0x0
   130  000005                     	ds	1
   131  000006                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x1
   134  000006                     	ds	2
   135                           
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 47 in file "Principal.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   155 ;;      Params:         0       0       0       0       0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0       0       0       0       0
   157 ;;      Temps:          2       0       0       0       0       0       0       0       0
   158 ;;      Totals:         2       0       0       0       0       0       0       0       0
   159 ;;Total ram usage:        2 bytes
   160 ;; Hardware stack levels required when called:    2
   161 ;; This function calls:
   162 ;;		_Giro_IN
   163 ;;		_Giro_OUT
   164 ;;		_InitPort
   165 ;;		_Init_Int
   166 ;; This function is called by:
   167 ;;		Startup code after reset
   168 ;; This function uses a non-reentrant model
   169 ;;
   170                           
   171                           	psect	text0
   172  000806                     __ptext0:
   173                           	callstack 0
   174  000806                     _main:
   175                           	callstack 29
   176  000806                     
   177                           ;Principal.c: 49:     InitPort();
   178  000806  ECED  F004         	call	_InitPort	;wreg free
   179  00080A                     
   180                           ;Principal.c: 50:     Init_Int();
   181  00080A  ECF8  F004         	call	_Init_Int	;wreg free
   182  00080E                     l49:
   183                           
   184                           ;Principal.c: 52:         if(EMERGENCIA==0)
   185  00080E  5003               	movf	_EMERGENCIA^0,w,c
   186  000810  A4D8               	btfss	status,2,c
   187  000812  EF0D  F004         	goto	u31
   188  000816  EF0F  F004         	goto	u30
   189  00081A                     u31:
   190  00081A  EF7E  F004         	goto	l821
   191  00081E                     u30:
   192  00081E                     
   193                           ;Principal.c: 53:         {;Principal.c: 54:            if((PORTCbits.RC0 == 0) && (i<5 
      +                          ))
   194  00081E  B082               	btfsc	130,0,c	;volatile
   195  000820  EF14  F004         	goto	u41
   196  000824  EF16  F004         	goto	u40
   197  000828                     u41:
   198  000828  EF3E  F004         	goto	l51
   199  00082C                     u40:
   200  00082C  BE02               	btfsc	(_i+1)^0,7,c
   201  00082E  EF24  F004         	goto	u50
   202  000832  5002               	movf	(_i+1)^0,w,c
   203  000834  E107               	bnz	u51
   204  000836  0E05               	movlw	5
   205  000838  5C01               	subwf	_i^0,w,c
   206  00083A  B0D8               	btfsc	status,0,c
   207  00083C  EF22  F004         	goto	u51
   208  000840  EF24  F004         	goto	u50
   209  000844                     u51:
   210  000844  EF3E  F004         	goto	l51
   211  000848                     u50:
   212  000848                     
   213                           ;Principal.c: 55:             {;Principal.c: 56:                 _delay((unsigned long)(
      +                          (200)*(48000000/4000.0)));
   214  000848  0E0D               	movlw	13
   215  00084A  6E07               	movwf	(??_main+1)^0,c
   216  00084C  0E2D               	movlw	45
   217  00084E  6E06               	movwf	??_main^0,c
   218  000850  0ED8               	movlw	216
   219  000852                     u137:
   220  000852  2EE8               	decfsz	wreg,f,c
   221  000854  D7FE               	bra	u137
   222  000856  2E06               	decfsz	??_main^0,f,c
   223  000858  D7FC               	bra	u137
   224  00085A  2E07               	decfsz	(??_main+1)^0,f,c
   225  00085C  D7FA               	bra	u137
   226  00085E                     l52:
   227  00085E  A082               	btfss	130,0,c	;volatile
   228  000860  EF34  F004         	goto	u61
   229  000864  EF36  F004         	goto	u60
   230  000868                     u61:
   231  000868  EF2F  F004         	goto	l52
   232  00086C                     u60:
   233  00086C                     
   234                           ;Principal.c: 58:                 i++;
   235  00086C  4A01               	infsnz	_i^0,f,c
   236  00086E  2A02               	incf	(_i+1)^0,f,c
   237  000870                     
   238                           ;Principal.c: 59:                 Giro_IN();
   239  000870  ECB2  F004         	call	_Giro_IN	;wreg free
   240  000874                     l801:
   241                           
   242                           ;Principal.c: 60:                 LATA=i;
   243  000874  C001  FF89         	movff	_i,3977	;volatile
   244                           
   245                           ;Principal.c: 61:             }
   246  000878  EF07  F004         	goto	l49
   247  00087C                     l51:
   248  00087C  B282               	btfsc	130,1,c	;volatile
   249  00087E  EF43  F004         	goto	u71
   250  000882  EF45  F004         	goto	u70
   251  000886                     u71:
   252  000886  EF95  F004         	goto	l60
   253  00088A                     u70:
   254  00088A  BE02               	btfsc	(_i+1)^0,7,c
   255  00088C  EF50  F004         	goto	u81
   256  000890  5002               	movf	(_i+1)^0,w,c
   257  000892  E108               	bnz	u80
   258  000894  0401               	decf	_i^0,w,c
   259  000896  A0D8               	btfss	status,0,c
   260  000898  EF50  F004         	goto	u81
   261  00089C  EF52  F004         	goto	u80
   262  0008A0                     u81:
   263  0008A0  EF95  F004         	goto	l60
   264  0008A4                     u80:
   265  0008A4                     
   266                           ;Principal.c: 64:             {;Principal.c: 65:                 _delay((unsigned long)(
      +                          (200)*(48000000/4000.0)));
   267  0008A4  0E0D               	movlw	13
   268  0008A6  6E07               	movwf	(??_main+1)^0,c
   269  0008A8  0E2D               	movlw	45
   270  0008AA  6E06               	movwf	??_main^0,c
   271  0008AC  0ED8               	movlw	216
   272  0008AE                     u147:
   273  0008AE  2EE8               	decfsz	wreg,f,c
   274  0008B0  D7FE               	bra	u147
   275  0008B2  2E06               	decfsz	??_main^0,f,c
   276  0008B4  D7FC               	bra	u147
   277  0008B6  2E07               	decfsz	(??_main+1)^0,f,c
   278  0008B8  D7FA               	bra	u147
   279  0008BA                     l57:
   280  0008BA  A282               	btfss	130,1,c	;volatile
   281  0008BC  EF62  F004         	goto	u91
   282  0008C0  EF64  F004         	goto	u90
   283  0008C4                     u91:
   284  0008C4  EF5D  F004         	goto	l57
   285  0008C8                     u90:
   286  0008C8                     
   287                           ;Principal.c: 67:                 i--;
   288  0008C8  0601               	decf	_i^0,f,c
   289  0008CA  A0D8               	btfss	status,0,c
   290  0008CC  0602               	decf	(_i+1)^0,f,c
   291  0008CE                     
   292                           ;Principal.c: 68:                 Giro_OUT ();
   293  0008CE  EC99  F004         	call	_Giro_OUT	;wreg free
   294  0008D2  EF3A  F004         	goto	l801
   295  0008D6                     l813:
   296                           
   297                           ;Principal.c: 75:            {;Principal.c: 76:              Giro_OUT ();
   298  0008D6  EC99  F004         	call	_Giro_OUT	;wreg free
   299  0008DA                     
   300                           ;Principal.c: 77:              i--;
   301  0008DA  0601               	decf	_i^0,f,c
   302  0008DC  A0D8               	btfss	status,0,c
   303  0008DE  0602               	decf	(_i+1)^0,f,c
   304  0008E0                     
   305                           ;Principal.c: 78:              LATA=i;
   306  0008E0  C001  FF89         	movff	_i,3977	;volatile
   307  0008E4                     
   308                           ;Principal.c: 79:              _delay((unsigned long)((500)*(48000000/4000.0)));
   309  0008E4  0E1F               	movlw	31
   310  0008E6  6E07               	movwf	(??_main+1)^0,c
   311  0008E8  0E71               	movlw	113
   312  0008EA  6E06               	movwf	??_main^0,c
   313  0008EC  0E1E               	movlw	30
   314  0008EE                     u157:
   315  0008EE  2EE8               	decfsz	wreg,f,c
   316  0008F0  D7FE               	bra	u157
   317  0008F2  2E06               	decfsz	??_main^0,f,c
   318  0008F4  D7FC               	bra	u157
   319  0008F6  2E07               	decfsz	(??_main+1)^0,f,c
   320  0008F8  D7FA               	bra	u157
   321  0008FA  D000               	nop2	
   322  0008FC                     l821:
   323                           
   324                           ;Principal.c: 74:            while((EMERGENCIA == 0xff) && (i>0) )
   325  0008FC  2803               	incf	_EMERGENCIA^0,w,c
   326  0008FE  A4D8               	btfss	status,2,c
   327  000900  EF84  F004         	goto	u101
   328  000904  EF86  F004         	goto	u100
   329  000908                     u101:
   330  000908  EF95  F004         	goto	l60
   331  00090C                     u100:
   332  00090C  BE02               	btfsc	(_i+1)^0,7,c
   333  00090E  EF93  F004         	goto	u110
   334  000912  5002               	movf	(_i+1)^0,w,c
   335  000914  E106               	bnz	u111
   336  000916  0401               	decf	_i^0,w,c
   337  000918  B0D8               	btfsc	status,0,c
   338  00091A  EF91  F004         	goto	u111
   339  00091E  EF93  F004         	goto	u110
   340  000922                     u111:
   341  000922  EF6B  F004         	goto	l813
   342  000926                     u110:
   343  000926  EF07  F004         	goto	l49
   344  00092A                     l60:
   345  00092A  EF07  F004         	goto	l49
   346  00092E  EF07  F000         	goto	start
   347  000932                     __end_of_main:
   348                           	callstack 0
   349                           
   350 ;; *************** function _Init_Int *****************
   351 ;; Defined at:
   352 ;;		line 39 in file "Principal.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		None
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   366 ;;      Params:         0       0       0       0       0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; Hardware stack levels required when called:    1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text1
   381  0009F0                     __ptext1:
   382                           	callstack 0
   383  0009F0                     _Init_Int:
   384                           	callstack 29
   385  0009F0                     
   386                           ;Principal.c: 41:     INTCON3bits.INT1E = 1;
   387  0009F0  86F0               	bsf	240,3,c	;volatile
   388                           
   389                           ;Principal.c: 42:     INTCON3bits.INT1F = 0;
   390  0009F2  90F0               	bcf	240,0,c	;volatile
   391                           
   392                           ;Principal.c: 43:     INTCON2bits.INTEDG2 = 0;
   393  0009F4  98F1               	bcf	241,4,c	;volatile
   394                           
   395                           ;Principal.c: 44:     INTCONbits.GIE = 1;
   396  0009F6  8EF2               	bsf	242,7,c	;volatile
   397  0009F8  0012               	return		;funcret
   398  0009FA                     __end_of_Init_Int:
   399                           	callstack 0
   400                           
   401 ;; *************** function _InitPort *****************
   402 ;; Defined at:
   403 ;;		line 30 in file "Principal.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         0       0       0       0       0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text2
   432  0009DA                     __ptext2:
   433                           	callstack 0
   434  0009DA                     _InitPort:
   435                           	callstack 29
   436  0009DA                     
   437                           ;Principal.c: 31:     ADCON1bits.PCFG = 0xFF;
   438  0009DA  0E0F               	movlw	15
   439  0009DC  12C1               	iorwf	193,f,c	;volatile
   440  0009DE                     
   441                           ;Principal.c: 32:     TRISCbits.RC0=1;
   442  0009DE  8094               	bsf	148,0,c	;volatile
   443  0009E0                     
   444                           ;Principal.c: 33:     TRISCbits.RC1=1;
   445  0009E0  8294               	bsf	148,1,c	;volatile
   446                           
   447                           ;Principal.c: 34:     TRISB=0b00000111;
   448  0009E2  0E07               	movlw	7
   449  0009E4  6E93               	movwf	147,c	;volatile
   450                           
   451                           ;Principal.c: 35:     TRISE=0x00;
   452  0009E6  0E00               	movlw	0
   453  0009E8  6E96               	movwf	150,c	;volatile
   454                           
   455                           ;Principal.c: 36:     TRISA=0x00;
   456  0009EA  0E00               	movlw	0
   457  0009EC  6E92               	movwf	146,c	;volatile
   458  0009EE  0012               	return		;funcret
   459  0009F0                     __end_of_InitPort:
   460                           	callstack 0
   461                           
   462 ;; *************** function _Giro_OUT *****************
   463 ;; Defined at:
   464 ;;		line 109 in file "Principal.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   478 ;;      Params:         0       0       0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text3
   493  000932                     __ptext3:
   494                           	callstack 0
   495  000932                     _Giro_OUT:
   496                           	callstack 29
   497  000932                     
   498                           ;Principal.c: 111:     if (motor>0)
   499  000932  5004               	movf	_motor^0,w,c
   500  000934  B4D8               	btfsc	status,2,c
   501  000936  EF9F  F004         	goto	u21
   502  00093A  EFA1  F004         	goto	u20
   503  00093E                     u21:
   504  00093E  EFAD  F004         	goto	l783
   505  000942                     u20:
   506  000942                     
   507                           ;Principal.c: 112:     {;Principal.c: 113:         motor--;
   508  000942  0604               	decf	_motor^0,f,c
   509  000944                     l781:
   510                           
   511                           ;Principal.c: 114:         LATB=HORARIO[motor];
   512  000944  0E01               	movlw	low _HORARIO
   513  000946  2404               	addwf	_motor^0,w,c
   514  000948  6EF6               	movwf	tblptrl,c
   515  00094A  6AF7               	clrf	tblptrh,c
   516  00094C  0E08               	movlw	high _HORARIO
   517  00094E  22F7               	addwfc	tblptrh,f,c
   518  000950                     	if	0	;There are less than 3 active tblptr bytes
   519  000950                     	endif
   520  000950  0008               	tblrd		*
   521  000952  CFF5 FF8A          	movff	tablat,3978	;volatile
   522                           
   523                           ;Principal.c: 115:     }
   524  000956  EFB1  F004         	goto	l83
   525  00095A                     l783:
   526                           
   527                           ;Principal.c: 117:     {;Principal.c: 118:         motor=3;
   528  00095A  0E03               	movlw	3
   529  00095C  6E04               	movwf	_motor^0,c
   530  00095E  EFA2  F004         	goto	l781
   531  000962                     l83:
   532  000962  0012               	return		;funcret
   533  000964                     __end_of_Giro_OUT:
   534                           	callstack 0
   535                           
   536 ;; *************** function _Giro_IN *****************
   537 ;; Defined at:
   538 ;;		line 93 in file "Principal.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   552 ;;      Params:         0       0       0       0       0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text4
   567  000964                     __ptext4:
   568                           	callstack 0
   569  000964                     _Giro_IN:
   570                           	callstack 29
   571  000964                     
   572                           ;Principal.c: 95:     if (motor<3)
   573  000964  0E03               	movlw	3
   574  000966  6004               	cpfslt	_motor^0,c
   575  000968  EFB8  F004         	goto	u11
   576  00096C  EFBA  F004         	goto	u10
   577  000970                     u11:
   578  000970  EFC6  F004         	goto	l773
   579  000974                     u10:
   580  000974                     
   581                           ;Principal.c: 96:     {;Principal.c: 97:         motor++;
   582  000974  2A04               	incf	_motor^0,f,c
   583  000976                     l771:
   584                           
   585                           ;Principal.c: 98:         LATB=HORARIO[motor];
   586  000976  0E01               	movlw	low _HORARIO
   587  000978  2404               	addwf	_motor^0,w,c
   588  00097A  6EF6               	movwf	tblptrl,c
   589  00097C  6AF7               	clrf	tblptrh,c
   590  00097E  0E08               	movlw	high _HORARIO
   591  000980  22F7               	addwfc	tblptrh,f,c
   592  000982                     	if	0	;There are less than 3 active tblptr bytes
   593  000982                     	endif
   594  000982  0008               	tblrd		*
   595  000984  CFF5 FF8A          	movff	tablat,3978	;volatile
   596                           
   597                           ;Principal.c: 99:     }
   598  000988  EFCA  F004         	goto	l78
   599  00098C                     l773:
   600                           
   601                           ;Principal.c: 101:     {;Principal.c: 102:         motor=0;
   602  00098C  0E00               	movlw	0
   603  00098E  6E04               	movwf	_motor^0,c
   604  000990  EFBB  F004         	goto	l771
   605  000994                     l78:
   606  000994  0012               	return		;funcret
   607  000996                     __end_of_Giro_IN:
   608                           	callstack 0
   609                           
   610 ;; *************** function _INT_isr *****************
   611 ;; Defined at:
   612 ;;		line 86 in file "Principal.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   626 ;;      Params:         0       0       0       0       0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0       0
   628 ;;      Temps:          1       0       0       0       0       0       0       0       0
   629 ;;      Totals:         1       0       0       0       0       0       0       0       0
   630 ;;Total ram usage:        1 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		Interrupt level 2
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	intcode
   640  000008                     __pintcode:
   641                           	callstack 0
   642  000008                     _INT_isr:
   643                           	callstack 29
   644                           
   645                           ;incstack = 0
   646  000008  8208               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   647  00000A  EDCB  F004         	call	int_func,f	;refresh shadow registers
   648                           
   649                           	psect	intcode_body
   650  000996                     __pintcode_body:
   651                           	callstack 29
   652  000996                     int_func:
   653                           	callstack 29
   654  000996  0006               	pop		; remove dummy address from shadow register refresh
   655  000998                     
   656                           ;Principal.c: 88:     EMERGENCIA = ~EMERGENCIA;
   657  000998  1E03               	comf	_EMERGENCIA^0,f,c
   658  00099A                     
   659                           ;Principal.c: 89:     LATEbits.LATE0=~LATEbits.LATE0;
   660  00099A  B08D               	btfsc	141,0,c	;volatile
   661  00099C  EFD2  F004         	goto	i2u12_41
   662  0009A0  EFD5  F004         	goto	i2u12_40
   663  0009A4                     i2u12_41:
   664  0009A4  0E01               	movlw	1
   665  0009A6  EFD6  F004         	goto	i2u12_46
   666  0009AA                     i2u12_40:
   667  0009AA  0E00               	movlw	0
   668  0009AC                     i2u12_46:
   669  0009AC  0AFF               	xorlw	255
   670  0009AE  6E05               	movwf	??_INT_isr^0,c
   671  0009B0  508D               	movf	141,w,c	;volatile
   672  0009B2  1805               	xorwf	??_INT_isr^0,w,c
   673  0009B4  0BFE               	andlw	-2
   674  0009B6  1805               	xorwf	??_INT_isr^0,w,c
   675  0009B8  6E8D               	movwf	141,c	;volatile
   676  0009BA                     
   677                           ;Principal.c: 90:     INTCON3bits.INT1F = 0;
   678  0009BA  90F0               	bcf	240,0,c	;volatile
   679  0009BC  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  0009BE  0011               	retfie		f
   681  0009C0                     __end_of_INT_isr:
   682                           	callstack 0
   683                           
   684                           	psect	rparam
   685  0000                     
   686                           	psect	temp
   687  000008                     btemp:
   688                           	callstack 0
   689  000008                     	ds	1
   690  0000                     int$flags	set	btemp
   691  0000                     wtemp8	set	btemp+1
   692  0000                     ttemp5	set	btemp+1
   693  0000                     ttemp6	set	btemp+4
   694  0000                     ttemp7	set	btemp+8
   695                           
   696                           	psect	idloc
   697                           
   698                           ;Config register IDLOC0 @ 0x200000
   699                           ;	unspecified, using default values
   700  200000                     	org	2097152
   701  200000  FF                 	db	255
   702                           
   703                           ;Config register IDLOC1 @ 0x200001
   704                           ;	unspecified, using default values
   705  200001                     	org	2097153
   706  200001  FF                 	db	255
   707                           
   708                           ;Config register IDLOC2 @ 0x200002
   709                           ;	unspecified, using default values
   710  200002                     	org	2097154
   711  200002  FF                 	db	255
   712                           
   713                           ;Config register IDLOC3 @ 0x200003
   714                           ;	unspecified, using default values
   715  200003                     	org	2097155
   716  200003  FF                 	db	255
   717                           
   718                           ;Config register IDLOC4 @ 0x200004
   719                           ;	unspecified, using default values
   720  200004                     	org	2097156
   721  200004  FF                 	db	255
   722                           
   723                           ;Config register IDLOC5 @ 0x200005
   724                           ;	unspecified, using default values
   725  200005                     	org	2097157
   726  200005  FF                 	db	255
   727                           
   728                           ;Config register IDLOC6 @ 0x200006
   729                           ;	unspecified, using default values
   730  200006                     	org	2097158
   731  200006  FF                 	db	255
   732                           
   733                           ;Config register IDLOC7 @ 0x200007
   734                           ;	unspecified, using default values
   735  200007                     	org	2097159
   736  200007  FF                 	db	255
   737                           
   738                           	psect	config
   739                           
   740                           ;Config register CONFIG1L @ 0x300000
   741                           ;	PLL Prescaler Selection bits
   742                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
   743                           ;	System Clock Postscaler Selection bits
   744                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   745                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   746                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   747  300000                     	org	3145728
   748  300000  04                 	db	4
   749                           
   750                           ;Config register CONFIG1H @ 0x300001
   751                           ;	Oscillator Selection bits
   752                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   753                           ;	Fail-Safe Clock Monitor Enable bit
   754                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   755                           ;	Internal/External Oscillator Switchover bit
   756                           ;	IESO = OFF, Oscillator Switchover mode disabled
   757  300001                     	org	3145729
   758  300001  0E                 	db	14
   759                           
   760                           ;Config register CONFIG2L @ 0x300002
   761                           ;	Power-up Timer Enable bit
   762                           ;	PWRT = ON, PWRT enabled
   763                           ;	Brown-out Reset Enable bits
   764                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   765                           ;	Brown-out Reset Voltage bits
   766                           ;	BORV = 3, Minimum setting 2.05V
   767                           ;	USB Voltage Regulator Enable bit
   768                           ;	VREGEN = OFF, USB voltage regulator disabled
   769  300002                     	org	3145730
   770  300002  18                 	db	24
   771                           
   772                           ;Config register CONFIG2H @ 0x300003
   773                           ;	Watchdog Timer Enable bit
   774                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   775                           ;	Watchdog Timer Postscale Select bits
   776                           ;	WDTPS = 32768, 1:32768
   777  300003                     	org	3145731
   778  300003  1E                 	db	30
   779                           
   780                           ; Padding undefined space
   781  300004                     	org	3145732
   782  300004  FF                 	db	255
   783                           
   784                           ;Config register CONFIG3H @ 0x300005
   785                           ;	CCP2 MUX bit
   786                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   787                           ;	PORTB A/D Enable bit
   788                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   789                           ;	Low-Power Timer 1 Oscillator Enable bit
   790                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   791                           ;	MCLR Pin Enable bit
   792                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   793  300005                     	org	3145733
   794  300005  01                 	db	1
   795                           
   796                           ;Config register CONFIG4L @ 0x300006
   797                           ;	Stack Full/Underflow Reset Enable bit
   798                           ;	STVREN = ON, Stack full/underflow will cause Reset
   799                           ;	Single-Supply ICSP Enable bit
   800                           ;	LVP = OFF, Single-Supply ICSP disabled
   801                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   802                           ;	ICPRT = OFF, ICPORT disabled
   803                           ;	Extended Instruction Set Enable bit
   804                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   805                           ;	Background Debugger Enable bit
   806                           ;	DEBUG = 0x1, unprogrammed default
   807  300006                     	org	3145734
   808  300006  81                 	db	129
   809                           
   810                           ; Padding undefined space
   811  300007                     	org	3145735
   812  300007  FF                 	db	255
   813                           
   814                           ;Config register CONFIG5L @ 0x300008
   815                           ;	Code Protection bit
   816                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   817                           ;	Code Protection bit
   818                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   819                           ;	Code Protection bit
   820                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   821                           ;	Code Protection bit
   822                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   823  300008                     	org	3145736
   824  300008  0F                 	db	15
   825                           
   826                           ;Config register CONFIG5H @ 0x300009
   827                           ;	Boot Block Code Protection bit
   828                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   829                           ;	Data EEPROM Code Protection bit
   830                           ;	CPD = OFF, Data EEPROM is not code-protected
   831  300009                     	org	3145737
   832  300009  C0                 	db	192
   833                           
   834                           ;Config register CONFIG6L @ 0x30000A
   835                           ;	Write Protection bit
   836                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   837                           ;	Write Protection bit
   838                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   839                           ;	Write Protection bit
   840                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   841                           ;	Write Protection bit
   842                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   843  30000A                     	org	3145738
   844  30000A  0F                 	db	15
   845                           
   846                           ;Config register CONFIG6H @ 0x30000B
   847                           ;	Configuration Register Write Protection bit
   848                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   849                           ;	Boot Block Write Protection bit
   850                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   851                           ;	Data EEPROM Write Protection bit
   852                           ;	WRTD = OFF, Data EEPROM is not write-protected
   853  30000B                     	org	3145739
   854  30000B  E0                 	db	224
   855                           
   856                           ;Config register CONFIG7L @ 0x30000C
   857                           ;	Table Read Protection bit
   858                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   859                           ;	Table Read Protection bit
   860                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   861                           ;	Table Read Protection bit
   862                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   863                           ;	Table Read Protection bit
   864                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   865  30000C                     	org	3145740
   866  30000C  0F                 	db	15
   867                           
   868                           ;Config register CONFIG7H @ 0x30000D
   869                           ;	Boot Block Table Read Protection bit
   870                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   871  30000D                     	org	3145741
   872  30000D  40                 	db	64
   873                           tosu	equ	0xFFF
   874                           tosh	equ	0xFFE
   875                           tosl	equ	0xFFD
   876                           stkptr	equ	0xFFC
   877                           pclatu	equ	0xFFB
   878                           pclath	equ	0xFFA
   879                           pcl	equ	0xFF9
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           prodh	equ	0xFF4
   885                           prodl	equ	0xFF3
   886                           indf0	equ	0xFEF
   887                           postinc0	equ	0xFEE
   888                           postdec0	equ	0xFED
   889                           preinc0	equ	0xFEC
   890                           plusw0	equ	0xFEB
   891                           fsr0h	equ	0xFEA
   892                           fsr0l	equ	0xFE9
   893                           wreg	equ	0xFE8
   894                           indf1	equ	0xFE7
   895                           postinc1	equ	0xFE6
   896                           postdec1	equ	0xFE5
   897                           preinc1	equ	0xFE4
   898                           plusw1	equ	0xFE3
   899                           fsr1h	equ	0xFE2
   900                           fsr1l	equ	0xFE1
   901                           bsr	equ	0xFE0
   902                           indf2	equ	0xFDF
   903                           postinc2	equ	0xFDE
   904                           postdec2	equ	0xFDD
   905                           preinc2	equ	0xFDC
   906                           plusw2	equ	0xFDB
   907                           fsr2h	equ	0xFDA
   908                           fsr2l	equ	0xFD9
   909                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMRAM     2     2      0
                            _Giro_IN
                           _Giro_OUT
                           _InitPort
                           _Init_Int
 ---------------------------------------------------------------------------------
 (1) _Init_Int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Giro_OUT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Giro_IN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Giro_IN
   _Giro_OUT
   _InitPort
   _Init_Int

 _INT_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       7       1        7.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7      20        0.0%
DATA                 0      0       7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Dec 14 09:00:20 2020

                      _i 0001                       l41 09EE                       l51 087C  
                     l44 09F8                       l60 092A                       l52 085E  
                     l57 08BA                       l49 080E                       l83 0962  
                     l78 0994                       u10 0974                       u11 0970  
                     u20 0942                       u21 093E                       u30 081E  
                     u31 081A                       u40 082C                       u41 0828  
                     u50 0848                       u51 0844                       u60 086C  
                     u61 0868                       u70 088A                       u71 0886  
                     u80 08A4                       u81 08A0                       u90 08C8  
                     u91 08C4                      l801 0874                      l803 088A  
                    l813 08D6                      l805 08A4                      l821 08FC  
                    l823 090C                      l815 08DA                      l807 08C8  
                    l761 09DE                      l817 08E0                      l809 08CE  
                    l771 0976                      l763 09E0                      l819 08E4  
                    l773 098C                      l781 0944                      l765 09F0  
                    l767 0964                      l783 095A                      l759 09DA  
                    l791 081E                      l769 0974                      l777 0932  
                    l793 082C                      l779 0942                      l795 0848  
                    l787 0806                      l797 086C                      l789 080A  
                    l799 0870                      u100 090C                      u101 0908  
                    u110 0926                      u111 0922                      u137 0852  
                    u147 08AE                      u157 08EE                      wreg 000FE8  
        __end_of_HORARIO 0805                     _LATA 000F89                     _LATB 000F8A  
                   i2l73 09BC          __end_of_INT_isr 09C0                     _main 0806  
                   btemp 0008                     start 000E          __end_of_Giro_IN 0996  
           ___param_bank 000000                    ?_main 0005                    i2l825 0998  
                  i2l827 099A                    i2l829 09BA                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISE 000F96                    _motor 0004  
                  tablat 000FF5                    ttemp5 0009                    ttemp6 000C  
                  ttemp7 0010                    status 000FD8                    wtemp8 0009  
        __initialization 09C0         __end_of_Giro_OUT 0964             __end_of_main 0932  
       __end_of_Init_Int 09FA         __end_of_InitPort 09F0                   ??_main 0006  
          __activetblptr 000001                ??_INT_isr 0005                ??_Giro_IN 0006  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 09C8  
          ___rparam_used 000001           __pcstackCOMRAM 0005                ?_Giro_OUT 0005  
              ?_Init_Int 0005                ?_InitPort 0005                  _HORARIO 0801  
                i2u12_40 09AA                  i2u12_41 09A4                  i2u12_46 09AC  
                _INT_isr 0008               ??_Giro_OUT 0006               ??_Init_Int 0006  
             ??_InitPort 0006                  _Giro_IN 0964                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 09C0  
                __ramtop 0800                  __ptext0 0806                  __ptext1 09F0  
                __ptext2 09DA                  __ptext3 0932                  __ptext4 0964  
         __pintcode_body 0996     end_of_initialization 09C8                  int_func 0996  
              _PORTCbits 000F82                _TRISCbits 000F94      start_initialization 09C0  
      __size_of_Giro_OUT 0032        __size_of_Init_Int 000A        __size_of_InitPort 0016  
            __pbssCOMRAM 0001                 ?_INT_isr 0005                 ?_Giro_IN 0005  
              __pintcode 0008              __smallconst 0800                 _LATEbits 000F8D  
             _ADCON1bits 000FC1         __size_of_INT_isr 09B8              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                 _Giro_OUT 0932                 _Init_Int 09F0  
               _InitPort 09DA         __size_of_Giro_IN 0032                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800               _EMERGENCIA 0003  
          __size_of_main 012C                 int$flags 0008               _INTCONbits 000FF2  
               intlevel2 0000  
